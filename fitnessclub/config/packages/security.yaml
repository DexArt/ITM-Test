security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        my_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            user_checker: App\Security\UserChecker

            form_login:
                login_path: login
                check_path: login
                provider: my_provider
                csrf_token_generator: security.csrf.token_manager

            logout:
                path: /logout
                target: /


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/profile, roles: [ROLE_USER,ROLE_ADMIN] }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/grouptraining/add, roles: ROLE_ADMIN }
        - { path: ^/grouptraining/edit, roles: ROLE_ADMIN }
        - { path: ^/profile/subscribe, roles: [ROLE_USER] }
        - { path: ^/grouptraining/view, roles: [IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER, ROLE_ADMIN] }
        # - { path: ^/profile, roles: ROLE_USER }
